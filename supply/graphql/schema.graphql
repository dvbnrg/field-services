### go get github.com/99designs/gqlgen@next

type Query {
    products(name: String!): [Result!]!
}

#type Mutation {
#
#}

type Result {
    product: Product!
    matchedIndexes: [Int!]!
}

type Product {
    productID: ID!
    category: String!
    name: String!
    uom: String!
}

type Order {
    orderID: ID!
    projectID: String!
    items: [Item!]!
    sentDate: Int!
#    status: String!
}

type Item {
    productID: ID!
    name: String!
    uom: String!
    quantityRequested: Int!
    quantityReceived: Int!
    quantityRemaining: Int!
#    ItemStatus: ItemStatus!
    poNumber: String!
}

#enum ItemStatus {
#    Waiting
#    Filled
#    BackOrdered
#    OrderExceeded
#    NotOrdered
#}

###########################################################
#type User {
#    id: ID!
#    name: String!
#    email: String!
#}
#
#type Video {
#    id: ID!
#    name: String!
#    description: String!
#    user: User!
#    url: String!
#    createdAt: Timestamp!
#    screenshots: [Screenshot]
#    related(limit: Int = 25, offset: Int = 0): [Video!]!
#}
#
#type Screenshot {
#    id: ID!
#    videoId: ID!
#    url: String!
#}
#
#input NewVideo {
#    name: String!
#    description: String!
#    userId: ID!
#    url: String!
#}
#
#type Mutation {
#    createVideo(input: NewVideo!): Video!
#}
#
#type Query {
#    Videos(limit: Int = 25, offset: Int = 0): [Video!]!
#}
#
#scalar Timestamp
#
#type Todo {
#    id: ID!
#    text: String!
#    done: Boolean!
#    user: User!
#}
#
#type User {
#    id: ID!
#    name: String!
#}
#
#type Query {
#    todos: [Todo!]!
#}
#
#input NewTodo {
#    text: String!
#    userId: String!
#}
#
#type Mutation {
#    createTodo(input: NewTodo!): Todo!
#}
#
#schema {
#    query: Query
#    mutation: Mutation
#}
#
#type Query {
#    user(id: ID!): User!
#}
#
#type Mutation {
#    createUser(input: NewUser!): User!
#    updateUser(input: UpdateUser!): User!
#    updateNotification(input: UpdateNotification): User!
#}
#
#type User {
#    id: ID!
#    first: String!
#    last: String!
#    email: String!
#    notifications: [Notification!]!
#}
#
#type Notification {
#    id: ID!
#    seen: Boolean!
#    text: String!
#    title: String!
#}
#
#input NewUser {
#    email: String!
#}
#
#input UpdateUser {
#    id: ID!
#    first: String
#    last: String
#    email: String
#}
#
#input UpdateNotification {
#    id: ID!
#    userID: ID!
#    seen: Boolean!
#}
#
#type Subscription {
#    notificationAdded(id: ID!): User!
#}